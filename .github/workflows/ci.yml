name: ci
on: [push, pull_request]

env:
  PYTHONPATH: backend/sentinelcore
  ENABLE_DEV_ROUTES: "1"
  BASE_URL: http://localhost:8000
  REGISTRY: ghcr.io
  IMAGE_OWNER: Arescoreadmin

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-smoke:
    name: Lint and Smoke
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      # Keep this tiny and deterministic. No CRLF or space-before-TAB nonsense.
      - name: Lint line endings and Makefile tabs
        shell: bash
        run: |
          set -euo pipefail
          files="$(git ls-files '*.py' '*.sh' '*.yml' '*.yaml' 'Dockerfile' '*.Dockerfile' || true)"
          if [ -n "$files" ] && git grep -I -n $'\r' -- $files >/tmp/crlf.txt; then
            echo "CRLF detected in:"
            cat /tmp/crlf.txt
            exit 1
          fi
          if [ -f Makefile ]; then
            awk '
              /^[[:space:]]*$/        { inrule=0; next }
              /^([A-Za-z0-9_.-]+:|\.PHONY:)/ { inrule=1; next }
              inrule && $0 !~ /^\t/ && $0 !~ /^[[:space:]]*#/ { bad=1 }
              END { if (bad) { print "Makefile recipes need TABS"; exit 1 } }
            ' Makefile
          fi

      - name: Prepare env files for CI
        run: |
          [ -f .env.example ] && cp .env.example .env || true
          echo 'VITE_API_BASE=http://localhost:8000' >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compose up (detached)
        run: docker compose -f infra/docker-compose.yml up -d --build --remove-orphans

      - name: Wait for health
        shell: bash
        run: |
          for i in {1..30}; do
            curl -fsS "$BASE_URL/health" && break || sleep 2
          done
          curl -fsS "$BASE_URL/health"

      - name: Run pytest
        run: |
          pytest -q backend/sentinelcore/Tests || pytest -q || true

      - name: Dump logs on failure
        if: failure()
        run: |
          docker ps -a || true
          docker compose -f infra/docker-compose.yml logs --no-color > compose-logs.txt || true

      - name: Upload compose logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: compose-logs
          path: compose-logs.txt
          if-no-files-found: ignore

      - name: Tear down
        if: always()
        run: docker compose -f infra/docker-compose.yml down -v || true

  build-and-push:
    name: Build, Tag, Push Images
    runs-on: ubuntu-latest
    needs: [lint-and-smoke]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta (sentinelcore)
        id: meta_sc
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/sentinelcore

      - name: Login to GHCR (PRs skip push)
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build (PR) or Build+Push (push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: infra/sentinelcore.Dockerfile
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta_sc.outputs.tags }}
          labels: ${{ steps.meta_sc.outputs.labels }}
