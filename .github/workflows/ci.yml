# .github/workflows/ci.yml
name: ci
on: [push, pull_request]

# Global env from your snippet
env:
  PYTHONPATH: backend/sentinelcore
  ENABLE_DEV_ROUTES: "1"     # if your app flips behavior with this
  BASE_URL: http://localhost:8000

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Lint line endings and Makefile tabs
        run: |
          if git grep -I $'\r' -- .; then
            echo "CRLF detected"; exit 1; fi
          if grep -n '^[[:space:]]\+[[:alnum:]$_({]' Makefile | grep -vq $'\t'; then
            echo "Makefile recipes need TABs"; exit 1; fi

      - name: Prepare env files for CI
        run: |
          # root .env for frontend defaults
          if [ -f .env.example ]; then
            cp .env.example .env
          else
            echo 'VITE_API_BASE=http://localhost:8000' > .env
          fi
          # infra env from example (tracked)
          if [ -f infra/.env.example ]; then
            cp infra/.env.example infra/.env
          else
            mkdir -p infra && : > infra/.env
          fi
          # fail fast if compose still references a missing file/var
          docker compose -f infra/docker-compose.yml config >/dev/null

      - name: Boot stack
        run: |
          make up
          # minimal wait so smoke doesn't 404
          for i in {1..30}; do
            curl -fsS "$BASE_URL/health" && break || sleep 2
          done

      - name: Smoke
        run: make smoke

      - name: Tear down
        if: always()
        run: |
          [ -f infra/.env ] || (mkdir -p infra && : > infra/.env)
          [ -f .env ] || : > .env
          make down || docker compose -f infra/docker-compose.yml down -v || true

  api-tests:
    runs-on: ubuntu-latest
    needs: lint-and-smoke
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f backend/sentinelcore/requirements.txt ]; then
            pip install -r backend/sentinelcore/requirements.txt
          fi
          if [ -f backend/sentinelcore/requirements-dev.txt ]; then
            pip install -r backend/sentinelcore/requirements-dev.txt
          fi
          # if you rely on pytest-pythonpath, uncomment:
          # pip install pytest-pythonpath

      - name: Boot API service
        run: |
          docker compose -f infra/docker-compose.yml up -d orchestrator
          for i in {1..30}; do
            curl -fsS "$BASE_URL/health" && break || sleep 2
          done
          curl -fsS "$BASE_URL/health"

      - name: Run API contract tests
        run: pytest -q backend/sentinelcore/tests

      - name: Dump logs on failure
        if: failure()
        run: |
          docker ps -a
          docker compose -f infra/docker-compose.yml logs --no-color > compose-logs.txt || true
        continue-on-error: true

      - name: Upload compose logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: compose-logs
          path: compose-logs.txt
          if-no-files-found: ignore

      - name: Tear down
        if: a
