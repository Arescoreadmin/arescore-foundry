delete that step, save, exit
git add .github/workflows/build-and-push.yml
git commit -m "ci: remove debug step"
git push
name: Build & Push Containers
on: [push, pull_request]

permissions:
  contents: read
  packages: write

jobs:
  guardrails:
    name: Codex Guardrails
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Guardrails
        run: echo "Guardrails OK"

  build_push:
    name: Build & Push Containers
    runs-on: ubuntu-latest
    needs: guardrails
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # Lowercase owner for GHCR; expose as 'steps.lc.outputs.owner'
      - name: Compute lowercase owner
        id: lc
        shell: bash
        run: |
          owner="${{ github.repository_owner }}"
          owner_lc="$(echo "$owner" | tr '[:upper:]' '[:lower:]')"
          echo "owner=$owner_lc" >> "$GITHUB_OUTPUT"

      # Optional: single deterministic PR tag for easy debug on PRs
      - name: Compute PR tag
        id: tag
        shell: bash
        run: |
          pr="${{ github.event.number }}"
          if [ -z "$pr" ] || [ "$pr" = "0" ]; then pr="manual"; fi
          echo "pr_tag=ghcr.io/${{ steps.lc.outputs.owner }}/sentinelcore:pr-${pr}" >> "$GITHUB_OUTPUT"

      - name: Login to GHCR
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build (PR) or Build+Push (push)
      - name: Build (PR) or Build+Push (push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: infra/sentinelcore.Dockerfile
          push: ${{ github.event_name == 'push' }}
          # Unified tag strategy:
          # - Always build PR tag (for local caching/consistency)
          # - Also stamp commit tag on pushes
          # - Also stamp :latest only when branch == main
          tags: |
            ${{ steps.tag.outputs.pr_tag }}
            ghcr.io/${{ steps.lc.outputs.owner }}/sentinelcore:commit-${{ github.sha }}
            ${{ github.ref == 'refs/heads/main' && format('ghcr.io/{0}/sentinelcore:latest', steps.lc.outputs.owner) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
