# Generated by scripts\write_compose.ps1

x-health: &health
  test: ["CMD-SHELL","wget -qO- http://localhost:$${HEALTH_PORT}/health >/dev/null 2>&1 || curl -fsS http://localhost:$${HEALTH_PORT}/health >/dev/null 2>&1 || exit 1"]
  interval: 10s
  timeout: 2s
  retries: 12
  start_period: 15s

networks:
  foundry_net:
    external: true

volumes:
  pip-cache: {}

services:
  orchestrator:
    profiles: ["app"]
    build:
      context: ../services/orchestrator
      dockerfile: Dockerfile
    ports:
      - "18080:8080"
    environment:
      HEALTH_PORT: 8080
      SERVICE_NAME: orchestrator
      DEPENDENCY_URLS: "http://observer_hub:9092/health,http://metrics_tuner:9102/health"
    healthcheck: *health
    restart: unless-stopped
    networks: [foundry_net]
    depends_on: [observer_hub, metrics_tuner]

  observer_hub:
    profiles: ["app"]
    build:
      context: ../services/observer_hub
      dockerfile: Dockerfile
    ports: ["9092:9092"]
    environment:
      HEALTH_PORT: 9092
    healthcheck: *health
    restart: unless-stopped
    networks: [foundry_net]

  metrics_tuner:
    profiles: ["app"]
    build:
      context: ../services/metrics_tuner
      dockerfile: Dockerfile
    ports: ["9102:9102"]
    environment:
      HEALTH_PORT: 9102
    healthcheck: *health
    restart: unless-stopped
    networks: [foundry_net]

  blueprint_guard:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - type: bind
        source: ..
        target: /app
        consistency: delegated
      - pip-cache:/root/.cache/pip
    command: >
      sh -lc "python -m pip install --no-input -r scripts/requirements.audit.txt 2>/dev/null || true &&
              python scripts/project_audit.py --strict"
    profiles: ["guard"]
    networks: [foundry_net]
