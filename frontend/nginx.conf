# frontend/nginx.conf
server {
  listen 8080;
  server_name _;
  root /usr/share/nginx/html;
  index index.html;

  # --- Health check ---------------------------------------------------------
  location = /health {
    return 200 'ok';
    add_header Content-Type text/plain;
  }

  # --- Runtime config (NEVER cache) ----------------------------------------
  # Vite copies frontend/public/config.js to /config.js in the build output.
  # Example file:
  #   window.__APP_CONFIG__ = { API_BASE: '/api' };
  location = /config.js {
    add_header Cache-Control "no-store";
    try_files $uri =404;
  }

  # --- API proxy ------------------------------------------------------------
  # Frontend calls same-origin /api/*; send it to the orchestrator container.
  # docker-compose service name: orchestrator (port 8000)
  location /api/ {
    proxy_http_version 1.1;
    proxy_pass http://orchestrator:8000/;

    # Forward client details
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_connect_timeout 5s;
    proxy_read_timeout    60s;

    # If your API needs large bodies, uncomment:
    # client_max_body_size 20m;
  }

  # --- Static asset caching -------------------------------------------------
  location ~* \.(?:js|mjs|css|png|jpg|jpeg|gif|svg|ico|woff2?|ttf)$ {
    expires 7d;
    add_header Cache-Control "public, max-age=604800, immutable";
    try_files $uri =404;
  }

  # --- SPA fallback ---------------------------------------------------------
  location / {
    try_files $uri $uri/ /index.html;
  }

  # --- Compression ----------------------------------------------------------
  gzip on;
  gzip_types
    text/plain
    text/css
    application/javascript
    application/json
    image/svg+xml
    application/wasm;
}
