
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: infra-prometheus-1
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-lifecycle
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=15d
      - --web.enable-admin-api
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
      - ./prometheus/alerts:/etc/prometheus/alerts:ro
      - prometheus-data:/prometheus
    ports: 
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      infra_appnet:
  infra_appnet:
    name: infra_appnet
    driver: bridge
    attachable: true
    labels:
      tier: infrastructure
      purpose: observability

      - infra_appnet

  alertmanager:
    image: prom/alertmanager:latest
    container_name: infra-alertmanager-1
    command:
      - --config.file=/etc/alertmanager/config.yml
      - --cluster.peer=alertmanager:9094
    volumes:
      - ./prometheus/alertmanager/config.yml:/etc/alertmanager/config.yml:ro
      - alertmanager-data:/alertmanager
    ports:
      - "9093:9093"
      - "9094:9094"  # Cluster port
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      infra_appnet:
  infra_appnet:
    name: infra_appnet
    driver: bridge
    attachable: true
    labels:
      tier: infrastructure
      purpose: observability

      - infra_appnet

  grafana:
    image: grafana/grafana:latest
    container_name: infra-grafana-1
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-admin}  # Consider using secrets
      - GF_USERS_DEFAULT_THEME=light
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "3001:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      prometheus:
        condition: service_healthy
    restart: unless-stopped
    networks:
      infra_appnet:
  infra_appnet:
    name: infra_appnet
    driver: bridge
    attachable: true
    labels:
      tier: infrastructure
      purpose: observability

      - infra_appnet

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  alertmanager-data:
    driver: local

networks:
  infra_appnet:
    name: infra_appnet
    driver: bridge
    attachable: true
    labels:
      tier: infrastructure
      purpose: observability

  infra_appnet:
    driver: bridge
    name: infra_appnet